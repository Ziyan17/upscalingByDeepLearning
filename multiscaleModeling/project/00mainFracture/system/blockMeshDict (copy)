/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

vertices
(
    (0 0 -1)
    (300 0 -1)
    (300 1 -1)
    (0 1 -1)
    (0 0 1)
    (300 0 1)
    (300 1 1)
    (0 1 1)
    
    (150 1 -1)
    (151 1 -1)
    (151 50 -1)
    (150 50 -1)
    (150 1 1)
    (151 1 1)
    (151 50 1)
    (150 50 1)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (300 10 1) simpleGrading (1 1 1)
    hex (8 9 10 11 12 13 14 15) (10 300 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    upperWall
    {
        type wall;
        faces
        (
            (3 7 6 2)
        );
    }

    symmetryPlane
    {
        type symmetryPlane;
        faces
        (
            (1 5 4 0)
        );
    }

    sideWall
    {
        type wall;
        faces
        (
            (8 12 15 11)
            (9 13 14 10)
        );
    }

    upInterface
    {
        type patch;
        faces
        (
            (8 9 13 12)
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (2 6 5 1)
            (10 11 15 14)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
            (8 11 10 9)
            (12 13 14 15)
        );
    }
);

mergePatchPairs
(
	(upperWall upInterface)
);

// ************************************************************************* //
/*


vertices
(
(0 0 -1)
(300 0 -1)
(300 0.5 -1)
(0 0.5 -1)
(0 0 1)
(300 0 1)
(300 0.5 1)
(0 0.5 1)
(149.95 0.5 -1)
(150.05 0.5 -1)
(150.05 100.5 -1)
(149.95 100.5 -1)
(149.95 0.5 1)
(150.05 0.5 1)
(150.05 100.5 1)
(149.95 100.5 1)
);

blocks
(
hex (0 1 2 3 4 5 6 7) (300 10 1) simpleGrading (1 1 1)
hex (8 9 10 11 12 13 14 15) (10 300 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
upperWall
{
type wall;
faces
(
(3 7 6 2)
);
}

symmetryPlane
{
type symmetryPlane;
faces
(
(1 5 4 0)
);
}

sideWall
{
type wall;
faces
(
(8 12 15 11)
(9 13 14 10)
);
}

upInterface
{
type patch;
faces
(
(8 9 13 12)
);
}

inlet
{
type patch;
faces
(
(0 4 7 3)
);
}

outlet
{
type patch;
faces
(
(2 6 5 1)
(10 11 15 14)
);
}

frontAndBack
{
type empty;
faces
(
(0 3 2 1)
(4 5 6 7)
(8 11 10 9)
(12 13 14 15)
);
}

);

mergePatchPairs
(
(upperWall upInterface)
);
